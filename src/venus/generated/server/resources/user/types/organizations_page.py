# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions

from ...commons.types.organization_id import OrganizationId


class OrganizationsPage(pydantic.BaseModel):
    organizations: typing.List[OrganizationId]
    next_page: typing.Optional[int] = pydantic.Field(alias="nextPage")

    class Partial(typing_extensions.TypedDict):
        organizations: typing_extensions.NotRequired[typing.List[OrganizationId]]
        next_page: typing_extensions.NotRequired[typing.Optional[int]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        allow_population_by_field_name = True
        extra = pydantic.Extra.forbid
        json_encoders = {dt.datetime: lambda v: v.isoformat()}
